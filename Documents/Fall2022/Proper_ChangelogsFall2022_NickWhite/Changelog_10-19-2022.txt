BioRubeLibrary
-------------------------------------------------------------
=============================================================
Line 30:
	added:
		public static GameObject FindRandom(string objTag)
    		{
        		GameObject[] trackable = GameObject.FindGameObjectsWithTag(objTag);
        		if(!trackable.empty())
            			return trackable[UnityEngine.Random.Range(0, foundObjs.Length)];
        		else
            			return null;
    		}
==============================================================
Line 39:
 	added:
		public static bool StillHere( GameObject obj, string objTag)
		{
        		GameObject[] trackable = GameObject.FindGameObjectsWithTag(objTag);
        		for(int index = 0; index < trackable.Length; index++ )
			{
            			if(obj == trackable[index])
                			return true;
        		}
        		return false;
    		}
==============================================================
--------------------------------------------------------------
ATPPathfinding.cs
--------------------------------------------------------------
==============================================================
line 80:
	from:
		trackThis = BioRubeLibrary.FindClosest(this.transform, trackingTag);
	to:
		trackThis = BioRubeLibrary.FindRandom(trackingTag);
==============================================================
--------------------------------------------------------------

ReceptorPathfinding.cs
--------------------------------------------------------------
==============================================================
line 70-81:
	from:
		myFoundObjs = GameObject.FindRandom(strFind);
  	      	count       = myFoundObjs.Length;

     	   	for(index = 0; index < count; index++)
     	   	{
      	  		if((myFoundObjs[index].GetComponent<ActivationProperties>().isActive == activeFind))
       			{
                		myTarget = myFoundObjs[index];
                		found    = true;
                		break;
            		}
       	   	}
	to:
		myFoundObjs = GameObject.FindGameObjectsWithTag(strFind);
        	count       = myFoundObjs.Length;
       		if(start == -1)
            		start = UnityEngine.Random.Range(0, count);
        	bool looped = false;
        	for(index = start; index != start || !looped; index++)
        	{
            		if(index >= count)
			{
                		index = 0;
                		looped = true;
            		}
            		if((myFoundObjs[index].GetComponent<ActivationProperties>().isActive == activeFind))
            		{
               			myTarget = myFoundObjs[index];
                		found    = true;
                		break;
            		}
        	}
==============================================================
line 30:
	added:
		private int start = -1;
==============================================================
line 106:
	added:
		start = -1;
==============================================================
--------------------------------------------------------------
GTP_CmdCtrls.cs
--------------------------------------------------------------
==============================================================
line 103:
	from:
		openTarget = BioRubeLibrary.FindClosest(transform, "DockedG_Protein");	
	to:
		openTarget = BioRubeLibrary.FindRandom("DockedG_Protein");
==============================================================
line 106:
	from:
		obj = BioRubeLibrary.FindClosest(transform, "tGProteinDock");
	to:
		obj = BioRubeLibrary.FindRandom("tGProteinDock");	
		